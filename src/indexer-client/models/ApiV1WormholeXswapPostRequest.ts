/* tslint:disable */
/* eslint-disable */
/**
 * Indexer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiV1WormholeXswapPostRequest
 */
export interface ApiV1WormholeXswapPostRequest {
    /**
     * src wormhole chain id
     * @type {number}
     * @memberof ApiV1WormholeXswapPostRequest
     */
    srcChain: number;
    /**
     * src token address
     * @type {string}
     * @memberof ApiV1WormholeXswapPostRequest
     */
    srcToken: string;
    /**
     * src token amount, bigint wei
     * @type {string}
     * @memberof ApiV1WormholeXswapPostRequest
     */
    srcAmount?: string;
    /**
     * dest wormhole chain id
     * @type {number}
     * @memberof ApiV1WormholeXswapPostRequest
     */
    dstChain: number;
    /**
     * dest token address
     * @type {string}
     * @memberof ApiV1WormholeXswapPostRequest
     */
    dstToken: string;
    /**
     * dest token amount, bigint wei
     * @type {string}
     * @memberof ApiV1WormholeXswapPostRequest
     */
    dstAmount?: string;
}

/**
 * Check if a given object implements the ApiV1WormholeXswapPostRequest interface.
 */
export function instanceOfApiV1WormholeXswapPostRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "srcChain" in value;
    isInstance = isInstance && "srcToken" in value;
    isInstance = isInstance && "dstChain" in value;
    isInstance = isInstance && "dstToken" in value;

    return isInstance;
}

export function ApiV1WormholeXswapPostRequestFromJSON(json: any): ApiV1WormholeXswapPostRequest {
    return ApiV1WormholeXswapPostRequestFromJSONTyped(json, false);
}

export function ApiV1WormholeXswapPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiV1WormholeXswapPostRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'srcChain': json['srcChain'],
        'srcToken': json['srcToken'],
        'srcAmount': !exists(json, 'srcAmount') ? undefined : json['srcAmount'],
        'dstChain': json['dstChain'],
        'dstToken': json['dstToken'],
        'dstAmount': !exists(json, 'dstAmount') ? undefined : json['dstAmount'],
    };
}

export function ApiV1WormholeXswapPostRequestToJSON(value?: ApiV1WormholeXswapPostRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'srcChain': value.srcChain,
        'srcToken': value.srcToken,
        'srcAmount': value.srcAmount,
        'dstChain': value.dstChain,
        'dstToken': value.dstToken,
        'dstAmount': value.dstAmount,
    };
}

